import org.ajoberstar.grgit.Grgit

plugins {
    id 'org.jetbrains.intellij.platform' version '2.2.1'
    id "org.ajoberstar.grgit" version "5.0.0-rc.3"
    id "java"
    id "idea"
}

group 'net.ishchenko.idea.nginx'
version '0.1.12'


repositories {
    mavenLocal()
    mavenCentral()
    intellijPlatform {
        defaultRepositories()
    }

}
ext {
    since = "241"
}
dependencies {
    intellijPlatform {
        intellijIdeaCommunity '2024.3.2'
        bundledPlugin 'com.intellij.java'
    }
//    implementation 'com.jgoodies:forms:1.2.1'
    implementation 'com.jgoodies:jgoodies-common:1.8.1'
    implementation 'com.jgoodies:jgoodies-forms:1.9.0'
//    implementation 'com.jgoodies:jgoodiesforms:1.5.1'
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
}

sourceSets {
    main {
        java.srcDirs 'src', 'gen'
        resources.srcDir 'resources'
    }
    test {
        java.srcDir 'tests'
    }
}

intellijPlatform {
    pluginConfiguration {
        id = 'net.ishchenko.idea.nginx'
        name = 'idea-nginx-support'
        version = project.version

        ideaVersion {
            sinceBuild = since
        }
    }

    pluginVerification {
        ides {
            ide("IC", since, false)
        }

    }
}


task generateDocumentation(type: JavaExec) {
    main = 'net.ishchenko.idea.nginx.KeywordsFromSourcesGenerator'
    classpath = sourceSets.main.runtimeClasspath
}

task getRepos() {
    doLast {
        def path = 'vendor/nginx'
        if (!file(path).exists()) {
            Grgit.clone(dir: file(path), uri: 'https://github.com/nginx/nginx.git')
        } else {
            Grgit.open(dir: file(path)).pull()
        }
        def luaPath = 'vendor/lua-nginx-module'
        if (!file(luaPath).exists()) {
            Grgit.clone(dir: file(luaPath), uri: 'https://github.com/openresty/lua-nginx-module.git')
        } else {
            Grgit.open(dir: file(luaPath)).pull()
        }
    }
}
